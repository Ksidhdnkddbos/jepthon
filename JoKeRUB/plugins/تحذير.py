import html
from telethon import Button, events
from telethon.tl.functions.channels import EditBannedRequest
from telethon.tl.types import ChatBannedRights
from JoKeRUB import l313l
from ..core.managers import edit_or_reply
from ..sql_helper import warns_sql as sql

plugin_category = "admin"

# --- Ø§Ù„Ø¯ÙˆØ§Ù„ Ø§Ù„Ø¬Ø¯ÙŠØ¯Ø© ---

async def mute_user(event, user_id, duration=None):
    """
    Ø¯Ø§Ù„Ø© Ù„ÙƒØªÙ… Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù….
    - Ø¥Ø°Ø§ ØªÙ… ØªØ­Ø¯ÙŠØ¯ Ø§Ù„Ù…Ø¯Ø©ØŒ ÙŠØªÙ… Ø§Ù„ÙƒØªÙ… Ù„Ù…Ø¯Ø© Ù…Ø­Ø¯Ø¯Ø©.
    - Ø¥Ø°Ø§ Ù„Ù… ÙŠØªÙ… ØªØ­Ø¯ÙŠØ¯ Ø§Ù„Ù…Ø¯Ø©ØŒ ÙŠØªÙ… Ø§Ù„ÙƒØªÙ… Ø¨Ø´ÙƒÙ„ Ø¯Ø§Ø¦Ù….
    """
    try:
        if duration:
            await event.client.edit_permissions(
                event.chat_id,
                user_id,
                send_messages=False,
                until_date=duration,
            )
            await event.respond(f"ØªÙ… ÙƒØªÙ… Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ù„Ù…Ø¯Ø© {duration} Ø«Ø§Ù†ÙŠØ©.")
        else:
            await event.client.edit_permissions(
                event.chat_id,
                user_id,
                send_messages=False,
            )
            await event.respond("ØªÙ… ÙƒØªÙ… Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø¨Ø´ÙƒÙ„ Ø¯Ø§Ø¦Ù….")
    except Exception as e:
        await event.respond(f"Ø­Ø¯Ø« Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ù…Ø­Ø§ÙˆÙ„Ø© ÙƒØªÙ… Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…: {e}")

async def restrict_user(event, user_id, duration=None):
    """
    Ø¯Ø§Ù„Ø© Ù„ØªÙ‚ÙŠÙŠØ¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù….
    - Ø¥Ø°Ø§ ØªÙ… ØªØ­Ø¯ÙŠØ¯ Ø§Ù„Ù…Ø¯Ø©ØŒ ÙŠØªÙ… Ø§Ù„ØªÙ‚ÙŠÙŠØ¯ Ù„Ù…Ø¯Ø© Ù…Ø­Ø¯Ø¯Ø©.
    - Ø¥Ø°Ø§ Ù„Ù… ÙŠØªÙ… ØªØ­Ø¯ÙŠØ¯ Ø§Ù„Ù…Ø¯Ø©ØŒ ÙŠØªÙ… Ø§Ù„ØªÙ‚ÙŠÙŠØ¯ Ø¨Ø´ÙƒÙ„ Ø¯Ø§Ø¦Ù….
    """
    try:
        if duration:
            await event.client.edit_permissions(
                event.chat_id,
                user_id,
                send_messages=False,
                until_date=duration,
            )
            await event.respond(f"ØªÙ… ØªÙ‚ÙŠÙŠØ¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ù„Ù…Ø¯Ø© {duration} Ø«Ø§Ù†ÙŠØ©.")
        else:
            await event.client.edit_permissions(
                event.chat_id,
                user_id,
                send_messages=False,
            )
            await event.respond("ØªÙ… ØªÙ‚ÙŠÙŠØ¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø¨Ø´ÙƒÙ„ Ø¯Ø§Ø¦Ù….")
    except Exception as e:
        await event.respond(f"Ø­Ø¯Ø« Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ù…Ø­Ø§ÙˆÙ„Ø© ØªÙ‚ÙŠÙŠØ¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…: {e}")

async def ban_user(event, user_id):
    """
    Ø¯Ø§Ù„Ø© Ù„Ø­Ø¸Ø± Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù….
    """
    try:
        await event.client(
            EditBannedRequest(
                event.chat_id,
                user_id,
                ChatBannedRights(until_date=None, view_messages=True),
            )
        )
        await event.respond("ØªÙ… Ø­Ø¸Ø± Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù….")
    except Exception as e:
        await event.respond(f"Ø­Ø¯Ø« Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ù…Ø­Ø§ÙˆÙ„Ø© Ø­Ø¸Ø± Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…: {e}")

async def kick_user(event, user_id):
    """
    Ø¯Ø§Ù„Ø© Ù„Ø·Ø±Ø¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù….
    """
    try:
        await event.client.kick_participant(event.chat_id, user_id)
        await event.respond("ØªÙ… Ø·Ø±Ø¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù….")
    except Exception as e:
        await event.respond(f"Ø­Ø¯Ø« Ø®Ø·Ø£ Ø£Ø«Ù†Ø§Ø¡ Ù…Ø­Ø§ÙˆÙ„Ø© Ø·Ø±Ø¯ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…: {e}")

# --- Ø¯Ø§Ù„Ø© Ø§Ù„ØªØ­Ø°ÙŠØ± ---

@l313l.ar_cmd(
    pattern="ØªØ­Ø°ÙŠØ±(?:\s|$)([\s\S]*)",
    command=("ØªØ­Ø°ÙŠØ±", plugin_category),
    info={
        "header": "Ù„ØªØ­Ø°ÙŠØ± Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù….",
        "description": "Ø³ÙŠØ­Ø°Ø± Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø§Ù„Ø°ÙŠ ØªÙ… Ø§Ù„Ø±Ø¯ Ø¹Ù„ÙŠÙ‡.",
        "usage": "ØªØ­Ø°ÙŠØ± <Ø§Ù„Ø³Ø¨Ø¨>",
    },
)
async def _(event):
    "Ù„ØªØ­Ø°ÙŠØ± Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù…"
    warn_reason = event.pattern_match.group(1)
    if not warn_reason:
        warn_reason = "- Ù„Ø§ ÙŠÙˆØ¬Ø¯ Ø³Ø¨Ø¨ ØŒ ðŸ—’"
    reply_message = await event.get_reply_message()
    limit, soft_warn = sql.get_warn_setting(event.chat_id)
    num_warns, reasons = sql.warn_user(
        str(reply_message.sender_id), event.chat_id, warn_reason
    )
    
    reply = "**â–¸â”Š[ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… ðŸ‘¤](tg://user?id={}) **Ù„Ø¯ÙŠÙ‡ {}/{} ØªØ­Ø°ÙŠØ±Ø§ØªØŒ Ø§Ø­Ø°Ø±!**".format(
        reply_message.sender_id, num_warns, limit
    )
    if warn_reason:
        reply += "\nâ–¸â”ŠØ³Ø¨Ø¨ Ø§Ù„ØªØ­Ø°ÙŠØ± Ø§Ù„Ø£Ø®ÙŠØ± \n{}".format(html.escape(warn_reason))
    
    await edit_or_reply(event, reply)

    # Ø¥Ø±Ø³Ø§Ù„ Ø±Ø³Ø§Ù„Ø© Ø§Ù„Ø£Ø²Ø±Ø§Ø± Ø¹Ù†Ø¯ ÙˆØµÙˆÙ„ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø¥Ù„Ù‰ 3 ØªØ­Ø°ÙŠØ±Ø§Øª
    if num_warns == 3:
        buttons = [
            [Button.inline("ÙƒØªÙ…", data="mute_user")],
            [Button.inline("ØªÙ‚ÙŠÙŠØ¯", data="restrict_user")],
            [Button.inline("Ø­Ø¸Ø±", data="ban_user")],
            [Button.inline("Ø·Ø±Ø¯", data="kick_user")],
            [Button.inline("ÙƒØªÙ… 24 Ø³Ø§Ø¹Ø©", data="mute_24h")],
            [Button.inline("ØªÙ‚ÙŠÙŠØ¯ 24 Ø³Ø§Ø¹Ø©", data="restrict_24h")]
        ]
        await event.reply("**â–¸â”ŠÙ„Ù‚Ø¯ ÙˆØµÙ„ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø¥Ù„Ù‰ 3 ØªØ­Ø°ÙŠØ±Ø§ØªØŒ Ø§Ø®ØªØ± Ø§Ù„Ø¥Ø¬Ø±Ø§Ø¡ Ø§Ù„Ù…Ù†Ø§Ø³Ø¨:**", buttons=buttons)

# --- Ø¯Ø§Ù„Ø© Ø§Ù„ØªØ¹Ø§Ù…Ù„ Ù…Ø¹ Ø§Ù„Ø£Ø²Ø±Ø§Ø± ---

@l313l.on(events.CallbackQuery)
async def handle_button_click(event):
    # Ø§Ù„Ø­ØµÙˆÙ„ Ø¹Ù„Ù‰ Ø¨ÙŠØ§Ù†Ø§Øª Ø§Ù„Ø²Ø± Ø§Ù„Ø°ÙŠ ØªÙ… Ø§Ù„Ù†Ù‚Ø± Ø¹Ù„ÙŠÙ‡
    data = event.data.decode("utf-8")
    
    # Ø§Ù„Ø­ØµÙˆÙ„ Ø¹Ù„Ù‰ Ø§Ù„Ù…Ø³ØªØ®Ø¯Ù… Ø§Ù„Ø°ÙŠ ØªÙ… Ø§Ù„Ø±Ø¯ Ø¹Ù„ÙŠÙ‡
    reply_message = await event.get_message()
    user_id = reply_message.reply_to_msg_id  # ÙŠÙ…ÙƒÙ† ØªØ¹Ø¯ÙŠÙ„ Ù‡Ø°Ø§ Ø­Ø³Ø¨ Ø§Ù„ÙƒÙˆØ¯ Ø§Ù„Ø®Ø§Øµ Ø¨Ùƒ
    
    # Ø§Ù„ØªØ¹Ø§Ù…Ù„ Ù…Ø¹ Ø§Ù„Ø£Ø²Ø±Ø§Ø± Ø¨Ù†Ø§Ø¡Ù‹ Ø¹Ù„Ù‰ Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª
    if data == "mute_user":
        await mute_user(event, user_id)  # ÙƒØªÙ… Ø¯Ø§Ø¦Ù…
    elif data == "restrict_user":
        await restrict_user(event, user_id)  # ØªÙ‚ÙŠÙŠØ¯ Ø¯Ø§Ø¦Ù…
    elif data == "ban_user":
        await ban_user(event, user_id)  # Ø­Ø¸Ø±
    elif data == "kick_user":
        await kick_user(event, user_id)  # Ø·Ø±Ø¯
    elif data == "mute_24h":
        await mute_user(event, user_id, duration=86400)  # ÙƒØªÙ… Ù„Ù…Ø¯Ø© 24 Ø³Ø§Ø¹Ø©
    elif data == "restrict_24h":
        await restrict_user(event, user_id, duration=86400)  # ØªÙ‚ÙŠÙŠØ¯ Ù„Ù…Ø¯Ø© 24 Ø³Ø§Ø¹Ø©
    
    # ØªØ£ÙƒÙŠØ¯ Ø§Ù„Ù†Ù‚Ø± Ø¹Ù„Ù‰ Ø§Ù„Ø²Ø±
    await event.answer()
